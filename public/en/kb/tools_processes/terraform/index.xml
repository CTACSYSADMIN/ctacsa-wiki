<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terraform on Documentation for Hugo Learn Theme</title>
    <link>//localhost:1313/en/kb/tools_processes/terraform/</link>
    <description>Recent content in Terraform on Documentation for Hugo Learn Theme</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Feb 2022 10:31:29 -0500</lastBuildDate>
    <atom:link href="//localhost:1313/en/kb/tools_processes/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>change instance size of server managed in terraform</title>
      <link>//localhost:1313/en/kb/tools_processes/terraform/change-instance-size-of-server-managed-in-terraform/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/terraform/change-instance-size-of-server-managed-in-terraform/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysic Corporation)  &#xA;=================================================&#xA;&#xA;Subject: How to change the instance size/type of a server that is managed by terraform&#xA;&#xA;Revision History:&#xA;    2015114-11 12:08:16 - Version 1 created by Bao&#xA;&#xA;Prerequisites&#xA;- you will need to shut down the instance (either need approval or prior notice)&#xA;&#xA;Details: &#xA;&#xA;In the console&#xA;- Shut down the instance&#xA;- (optional) create snapshot of the instance&#xA;- change instance type per the AWS instructions&#xA;Actions &amp;gt; Change Instance Type &amp;gt; Select new instance&#xA;- turn on the instance&#xA;In Terraform&#xA;- modify the tf file to reflect the new instance type&#xA;change (or similar)&#xA;    instance_type = &amp;#34;m3.medium”&#xA;to (or similar)&#xA;    instance_type = &amp;#34;m3.large&amp;#34;&#xA;- run a plan to confirm that no changes will be made&#xA;- commit your code&#xA;&#xA;&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be &#xA;disclosed in any manner to a third party without the prior written consent of &#xA;CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>ctac terraform commandments</title>
      <link>//localhost:1313/en/kb/tools_processes/terraform/ctac-terraform-commandments/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/terraform/ctac-terraform-commandments/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysis Corporation)  &#xA;=================================================&#xA;&#xA;&#xA;Subject: CTAC Terraform Commandments&#xA;&#xA;Revision History:&#xA;    2019-12-02 11:09:00 - Version 1 created by Bao Nguyen ala Paul Rigor&#xA;&#xA;&#xA;CTAC Terraform Commandments&#xA;---------------------------&#xA;&#xA;Thou shalt use terraform for Infrastructure As Code and any other use case that fits.&#xA;&#xA;Thou shalt prefer the use of  &amp;#34;Sub states&amp;#34; over monolithic design&#xA;&#xA;Thou shalt ensure not to copy .terraform folder when copying another sub state as a boilerplate&#xA;&#xA;Thou shalt ensure the remote state bucket key is unique before first Terraform init&#xA;&#xA;Thou shalt prefer the use of &amp;#34;Data&amp;#34; over remote states (New 2019).&#xA;Thou shalt convert remote state uses to data when encountered.&#xA;&#xA;Thou shalt make use of terraform fmt before a commit or as part of a pre-commit hook.&#xA;&#xA;Thou shalt fix errors or warnings before committing/finishing work.&#xA;&#xA;Thou shalt not hold up others from doing their work.&#xA;&#xA;Thou shalt use resource references, not hardcoded string (e.g. ARN or ID), when refering to another resource.  If a resource is not available then either import it to the appropriate sub state and/or use a Data resource and reference the Data resource.&#xA;&#xA;Thou shalt pay at least one unit of technical debt each time Terraform work is required.&#xA;&#xA;Thou shalt do a git pull prior to any commits and resolve any conflicts immediately.&#xA;&#xA;Thou shalt have three main tf files as part of any sub state folder: {project id}_init.tf {project id}_data.tf {project id}_locals.tf (Note the underscore).  All other files will be {project id}-{resource/type/purpose}[-{environment}] (notice the dashes)&#xA;&#xA;Thou shalt name sub state folders as project|svcs-{project id}[-{component}] unless for exceptions or higher level infrastructure.&#xA;&#xA;Thou shalt always check for and use the latest version of Terraform. Unless a sub state requires a specific version for migration/repair purposes.&#xA;&#xA;Thou shalt review the plan before typing &amp;#34;Yes&amp;#34; for the apply.&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be &#xA;disclosed in any manner to a third party without the prior written consent of &#xA;CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>terraform add disk space</title>
      <link>//localhost:1313/en/kb/tools_processes/terraform/terraform-add-disk-space/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/terraform/terraform-add-disk-space/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysic Corporation)  &#xA;=================================================&#xA;&#xA;Subject: Add disk space to a server in terraform&#xA;&#xA;Revision History:&#xA;    2015-10-26 10:56:00 - Version 1 created by Bao&#xA;&#xA;Details: &#xA;&#xA;Need to add disk space to a server but it’s in terraform? don’t worry…too much…&#xA;&#xA;&#xA;High level overview:&#xA;- check out the code (this part won’t be covered in this kb)&#xA;- configure your access/secret keys/region&#xA;- add the disk in terraform&#xA;- run a plan&#xA;- if all looks good run an apply.&#xA;- update the instance resource&#xA;- run another apply &#xA;- check in the code (this part won’t be covered in this kb)&#xA;&#xA;&#xA;And on we go&#xA;1) Check out the code&#xA;2) using your preferred editor, open the .tf file where the instance resource exists.&#xA;&#xA;3) Above the resource “aws_instance” “hhs-ruby-02-stg” { line, add the below and keep the following in mind:&#xA;- substitute ruby-02-stg (or similar) with the appropriate server name&#xA;- ensure that the availability_zone is correct (you might need to check the console for this)&#xA;- ensure device_name is appropriately set&#xA;- ensure the disk size is appropriately set&#xA;&#xA;&#xA;&#xA;‘’’&#xA;&#xA;resource &amp;#34;aws_ebs_volume&amp;#34; &amp;#34;ruby-02-stg_appdata_extend&amp;#34; {&#xA;  availability_zone = &amp;#34;us-east-1c&amp;#34;&#xA;  type = &amp;#34;gp2&amp;#34;&#xA;  size = 10&#xA;}&#xA;&#xA;resource &amp;#34;aws_volume_attachment&amp;#34; &amp;#34;hhs-ruby-02-stg_dev_sdg&amp;#34; {&#xA;  device_name = &amp;#34;/dev/sdg&amp;#34;&#xA;  volume_id = &amp;#34;${aws_ebs_volume.ruby-02-stg_appdata_extend.id}&amp;#34;&#xA;  instance_id = &amp;#34;${aws_instance.hhs-ruby-02-stg.id}&amp;#34;&#xA;}&#xA;&#xA;‘’’&#xA;&#xA;&#xA;4) Run a terraform plan -var access_key…..-var secret_access_key… The results should be similar to the following. Note that the volume and attachment are created:&#xA;&#xA;The Terraform execution plan has been generated and is shown below.&#xA;Resources are shown in alphabetical order for quick scanning. Green resources&#xA;will be created (or destroyed and then created if an existing resource&#xA;exists), yellow resources are being changed in-place, and red resources&#xA;will be destroyed.&#xA;&#xA;Note: You didn&amp;#39;t specify an &amp;#34;-out&amp;#34; parameter to save this plan, so when&#xA;&amp;#34;apply&amp;#34; is called, Terraform can&amp;#39;t guarantee this is what will execute.&#xA;&#xA;+ aws_ebs_volume.ruby-02-stg_appdata_extend&#xA;    availability_zone: &amp;#34;&amp;#34; =&amp;gt; &amp;#34;us-east-1c&amp;#34;&#xA;    encrypted:         &amp;#34;&amp;#34; =&amp;gt; &amp;#34;&amp;lt;computed&amp;gt;&amp;#34;&#xA;    iops:              &amp;#34;&amp;#34; =&amp;gt; &amp;#34;&amp;lt;computed&amp;gt;&amp;#34;&#xA;    kms_key_id:        &amp;#34;&amp;#34; =&amp;gt; &amp;#34;&amp;lt;computed&amp;gt;&amp;#34;&#xA;    size:              &amp;#34;&amp;#34; =&amp;gt; &amp;#34;10&amp;#34;&#xA;    snapshot_id:       &amp;#34;&amp;#34; =&amp;gt; &amp;#34;&amp;lt;computed&amp;gt;&amp;#34;&#xA;    type:              &amp;#34;&amp;#34; =&amp;gt; &amp;#34;gp2&amp;#34;&#xA;&#xA;+ aws_volume_attachment.hhs-ruby-02-stg_dev_sdg&#xA;    device_name:  &amp;#34;&amp;#34; =&amp;gt; &amp;#34;/dev/sdg&amp;#34;&#xA;    force_detach: &amp;#34;&amp;#34; =&amp;gt; &amp;#34;&amp;lt;computed&amp;gt;&amp;#34;&#xA;    instance_id:  &amp;#34;&amp;#34; =&amp;gt; &amp;#34;i-b0dd0265&amp;#34;&#xA;    volume_id:    &amp;#34;&amp;#34; =&amp;gt; &amp;#34;${aws_ebs_volume.ruby-02-stg_appdata_extend.id}&amp;#34;&#xA;&#xA;&#xA;&#xA;&#xA;5) If that’s all you see, then run a terraform apply. Give it a moment and check the Console &amp;gt; Volumes page. The new volume should be attached.&#xA;6) Edit the *.tf file again and add the following in the aws_instance resource, substituting the device_name and the size of the disk:&#xA;&#xA;&#xA;‘’’&#xA;    ebs_block_device {&#xA;        device_name = &amp;#34;/dev/sdg&amp;#34;&#xA;        volume_type = &amp;#34;gp2&amp;#34;&#xA;        volume_size = &amp;#34;10&amp;#34;&#xA;    }&#xA;&#xA;‘’’&#xA;&#xA;&#xA;7) Run a terraform plan and you should observe that no changes will be made.&#xA;8) push your code.&#xA;9) follow the doc on LVM&#xA;&#xA;&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be &#xA;disclosed in any manner to a third party without the prior written consent of &#xA;CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>terraform aws securing state bucket</title>
      <link>//localhost:1313/en/kb/tools_processes/terraform/terraform-aws-securing-state-bucket/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/terraform/terraform-aws-securing-state-bucket/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysis Corporation)  &#xA;=================================================&#xA;&#xA;Subject: Securing Terraform State S3 Bucket&#xA;&#xA;Revision History:&#xA;    2015-12-29 10:00:00 PT - Version 1 created by Paul Rigor&#xA;&#xA;Details: (include steps to reproduce, symptoms, corrective actions, contact information, links and a any other helpful information)&#xA;&#xA;It is important to secure S3 buckets containing terraform state information:&#xA;  * Prevent unauthorized users from obtaining sensitive information&#xA;  * Prevent unauthorized users from modifying or destroying state information&#xA;&#xA;NOTE:  Use of groups is not supported as a principal in Policies.&#xA;&#xA;1) In the S3 console.. select the bucket you wish to apply the policy to:&#xA;&#xA;   Note:  This may also be done in Terraform.. but since this is the state bucket... it will most likely not be managed in terraform. (see below for a Terraform example)&#xA;&#xA;2) Select or ensure &amp;#39;Properties is selected&amp;#39; and expand the Permissions section.&#xA;&#xA;3) Uncheck Upload/Delete, View Permissions, Edit Permissions from any Grantee.&#xA;&#xA;4) Select Add/Edit bucket policy.&#xA;&#xA;5) Paste the following policy. This policy resticts access to specific users and enforces that files need to be encrypted.  Replace all occurrences of {{decscription}} with proper values&#xA;{&#xA;  &amp;#34;Version&amp;#34;: &amp;#34;2008-10-17&amp;#34;,&#xA;  &amp;#34;Id&amp;#34;: &amp;#34;{{unique policy id}}&amp;#34;,&#xA;  &amp;#34;Statement&amp;#34;: [&#xA;    {&#xA;      &amp;#34;Sid&amp;#34;: &amp;#34;{{unique policy id name}}&amp;#34;,&#xA;      &amp;#34;Effect&amp;#34;: &amp;#34;Deny&amp;#34;,&#xA;      &amp;#34;NotPrincipal&amp;#34;: {&#xA;        &amp;#34;AWS&amp;#34;: [&#xA;          &amp;#34;arn:aws:iam::{{aws account number}}:user/{{aws admin user name 1}}&amp;#34;,&#xA;          &amp;#34;arn:aws:iam::{{aws account number}}:user/{{aws admin user name 2}}&amp;#34;,&#xA;          &amp;#34;arn:aws:iam::{{aws account number}}:user/{{aws admin user name 3}}&amp;#34;&#xA;          ... adjust for the actual number of users required to use terraform.&#xA;        ]&#xA;      },&#xA;      &amp;#34;Action&amp;#34;: &amp;#34;s3:*&amp;#34;,&#xA;      &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:s3:::{{s3 terraform state bucket name}}/*&amp;#34;&#xA;    },&#xA;    {&#xA;      &amp;#34;Sid&amp;#34;: &amp;#34;DenyUnEncryptedObjectUploads&amp;#34;,&#xA;      &amp;#34;Effect&amp;#34;: &amp;#34;Deny&amp;#34;,&#xA;      &amp;#34;Principal&amp;#34;: {&#xA;        &amp;#34;AWS&amp;#34;: &amp;#34;*&amp;#34;&#xA;      },&#xA;      &amp;#34;Action&amp;#34;: &amp;#34;s3:PutObject&amp;#34;,&#xA;      &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:s3:::{{s3 terraform state bucket name}}/*&amp;#34;,&#xA;      &amp;#34;Condition&amp;#34;: {&#xA;        &amp;#34;StringNotEquals&amp;#34;: {&#xA;          &amp;#34;s3:x-amz-server-side-encryption&amp;#34;: &amp;#34;AES256&amp;#34;&#xA;        }&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;&#xA;&#xA;6) Save the bucket policy.&#xA;&#xA;The above policy will allow only the specified users to take actions on the bucket.  And will not allow adding files that are not server-side-encrypted.&#xA;&#xA;Requirements for Terraform....&#xA;&#xA;Remote state must be encrption and you must be using AWS Access Keys associated with a user specified in the policy you applied.&#xA;&#xA;Your remote config for the S3 backend must be set with the backend-config of encrypt=true&#xA;&#xA;example:&#xA;&#xA;terraform remote config -backend=S3 -backend-config=&amp;#34;bucket=ctac-sysadmin-state&amp;#34; -backend-config=&amp;#34;key=terraform/noc-state&amp;#34; -backend-config=&amp;#34;encrypt=true&amp;#34;&#xA;&#xA;&#xA;For more information.. refer to the README.md of CTAC environment specific terraform Git repositories.&#xA;&#xA;&#xA;Below is an example of providing the policy to an S3 bucket via Terraform.  (always refer to the lastest Terraform docs https://www.terraform.io/docs/providers/aws/r/s3_bucket.html for latest information)&#xA;&#xA;resource &amp;#34;aws_s3_bucket&amp;#34; &amp;#34;noc-bucket-xyz&amp;#34; {&#xA;    bucket = &amp;#34;noc-xyz&amp;#34;&#xA;    policy = &amp;lt;&amp;lt;POLICY&#xA;    {&#xA;      &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;,&#xA;      &amp;#34;Statement&amp;#34;: [&#xA;    {&#xA;      &amp;#34;Version&amp;#34;: &amp;#34;2008-10-17&amp;#34;,&#xA;      &amp;#34;Id&amp;#34;: &amp;#34;{{unique policy id}}&amp;#34;,&#xA;      &amp;#34;Statement&amp;#34;: [&#xA;        {&#xA;          &amp;#34;Sid&amp;#34;: &amp;#34;{{unique policy id name}}&amp;#34;,&#xA;          &amp;#34;Effect&amp;#34;: &amp;#34;Deny&amp;#34;,&#xA;          &amp;#34;NotPrincipal&amp;#34;: {&#xA;            &amp;#34;AWS&amp;#34;: [&#xA;              &amp;#34;arn:aws:iam::{{aws account number}}:user/{{aws admin user name 1}}&amp;#34;,&#xA;              &amp;#34;arn:aws:iam::{{aws account number}}:user/{{aws admin user name 2}}&amp;#34;,&#xA;              &amp;#34;arn:aws:iam::{{aws account number}}:user/{{aws admin user name 3}}&amp;#34;&#xA;              ... adjust for the actual number of users required to use terraform.&#xA;            ]&#xA;          },&#xA;          &amp;#34;Action&amp;#34;: &amp;#34;s3:*&amp;#34;,&#xA;          &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:s3:::{{s3 terraform state bucket name}}/*&amp;#34;&#xA;        },&#xA;        {&#xA;          &amp;#34;Sid&amp;#34;: &amp;#34;DenyUnEncryptedObjectUploads&amp;#34;,&#xA;          &amp;#34;Effect&amp;#34;: &amp;#34;Deny&amp;#34;,&#xA;          &amp;#34;Principal&amp;#34;: {&#xA;            &amp;#34;AWS&amp;#34;: &amp;#34;*&amp;#34;&#xA;          },&#xA;          &amp;#34;Action&amp;#34;: &amp;#34;s3:PutObject&amp;#34;,&#xA;          &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:s3:::{{s3 terraform state bucket name}}/*&amp;#34;,&#xA;          &amp;#34;Condition&amp;#34;: {&#xA;            &amp;#34;StringNotEquals&amp;#34;: {&#xA;              &amp;#34;s3:x-amz-server-side-encryption&amp;#34;: &amp;#34;AES256&amp;#34;&#xA;            }&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;POLICY&#xA;}&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be &#xA;disclosed in any manner to a third party without the prior written consent of &#xA;CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>terraform backport resource into remote state file</title>
      <link>//localhost:1313/en/kb/tools_processes/terraform/terraform-backport-resource-into-remote-state-file/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/terraform/terraform-backport-resource-into-remote-state-file/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysis Corporation)&#xA;=================================================&#xA;&#xA;Subject: Terraform backport a resource into remote state file&#xA;&#xA;Revision History:&#xA;    2017-04-10 08:45 - Version 1 created by Bao Nguyen&#xA;&#xA;Details: (include steps to reproduce, symptoms, corrective actions, contact information, links and a any other helpful information)&#xA;&#xA;Applies to:&#xA; - Terraform version 0.9.2+&#xA; - Not for the faint of heart&#xA;&#xA;Scenario&#xA;- When upgrading terraform from 0.8 to 0.9, the remote state was introduced. We created aws_db_instance.fda-retailer-drpual-prod-1 in terraform using tfplanhhs and tfapplyhhs but somehow the resource did not make it into the state file. &#xA;&#xA;&#xA;Steps:&#xA;- First pull the state file:&#xA;&#xA;     terraform state pull &amp;gt; ~/tfhhs.state&#xA;&#xA;- If your tfhhs.state file does not have your resource, then import it&#xA;&#xA;Example:&#xA;&#xA;     terraform import aws_db_instance.fda-retailer-drupal-prod-1 fda-retailer-drupal-prod-1&#xA;&#xA;- After import success to a plan&#xA;&#xA;     tfplanhhs&#xA;&#xA;- Look for changes to your resource and make adjustments accordingly until tfplanhhs runs without any changes. RDS does not import the password so you&amp;#39;ll likely need to run an appy on just the password ****only after you have confirmed that the password is correct***&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;- Misc troubleshooting&#xA;I had to do at leat 1 terraform state pull to see the update to remote file. Just be patient and make sure tfplan succeeds.&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be&#xA;disclosed in any manner to a third party without the prior written consent of&#xA;CTAC.&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>terraform convert ebs block device to aws ebs volume and attachemnt</title>
      <link>//localhost:1313/en/kb/tools_processes/terraform/terraform-convert-ebs-block-device-to-aws-ebs-volume-and-attachemnt/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/terraform/terraform-convert-ebs-block-device-to-aws-ebs-volume-and-attachemnt/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysis Corporation)  &#xA;=================================================&#xA;&#xA;Subject: Terraform:  How to convert from ebs_block_device to aws_ebs_volume and aws_volume_attachment&#xA;&#xA;Revision History:&#xA;    2016-11-02 12:26:03 - Version 1 created by Paul Rigor&#xA;&#xA;Details: (include steps to reproduce, symptoms, corrective actions, contact information, links and a any other helpful information)&#xA;&#xA;Applies to Terraform v0.7.8 (future versions may require modification to process)&#xA;&#xA;Step 1: Run a terraform plan.  Resolve any modifications the plan indicated it will make prior to doing anything else.&#xA;&#xA;Step 2:  Identify the aws_instance you wish to convert. get the instance id (e.g. i-addb917e)&#xA;&#xA;Step 3:  For each ebs_block_device identified in the resource &amp;#34;aws_instance&amp;#34;&#xA;&#xA;  a) general steps&#xA;&#xA;  * Comment out the instances ebs_block_device attributes&#xA;  * Create a resource &amp;#34;aws_ebs_volume&amp;#34;&#xA;  * Create a resource &amp;#34;aws_volume_attachment&amp;#34;&#xA;  * Terrform import the aws_ebs_volume(s)&#xA;  * Create the &amp;#34;aws_volume_attachment&amp;#34; state info&#xA;  * Remove the ebs_block_device attributes from the aws_instance state info.&#xA;&#xA;  b) Example&#xA;&#xA; resource &amp;#34;aws_instance&amp;#34; &amp;#34;toolstack-east-svcs-1&amp;#34; {&#xA;    ami = &amp;#34;${var.amis-east-ubuntu}&amp;#34;&#xA;    instance_type = &amp;#34;m4.large&amp;#34;&#xA;    subnet_id = &amp;#34;${aws_subnet.subnet-east-svcs-2.id}&amp;#34;&#xA;    associate_public_ip_address = false&#xA;    private_ip = &amp;#34;${var.static-ips-east-svcs[&amp;#34;jenkins1&amp;#34;]}&amp;#34;&#xA;    iam_instance_profile = &amp;#34;ip-gsa-svcs&amp;#34;&#xA;    source_dest_check = true&#xA;    disable_api_termination = true&#xA;    monitoring = true&#xA;    ebs_optimized = true&#xA;    user_data = &amp;#34;${file(&amp;#34;templates/toolstack1-cloud-init-east.yaml&amp;#34;)}&amp;#34;&#xA;    key_name = &amp;#34;gsa-svcs-v1&amp;#34;&#xA;    vpc_security_group_ids = [&amp;#34;${aws_security_group.gsa-sg-east-svcs-common.id}&amp;#34;,&amp;#34;${aws_security_group.gsa-sg-east-svcs-jenkins.id}&amp;#34;,&amp;#34;${aws_security_group.gsa-sg-east-svcs-sensu.id}&amp;#34;,&amp;#34;${aws_security_group.sg-gsa-vault-us-east-1.id}&amp;#34;]&#xA;     lifecycle {&#xA;        prevent_destroy = false&#xA;    }&#xA;    tags {&#xA;        Name = &amp;#34;toolstack-01.svcs.east.gsa.local&amp;#34;&#xA;        Owner       = &amp;#34;gsa&amp;#34;&#xA;        Customer    = &amp;#34;cmp&amp;#34;&#xA;        Role        = &amp;#34;service-stack&amp;#34;&#xA;        ProjectId1  = &amp;#34;jenkins&amp;#34;&#xA;        ProjectId2  = &amp;#34;sensu&amp;#34;&#xA;        ProjectId3  = &amp;#34;vault&amp;#34;&#xA;        Environment = &amp;#34;svcs&amp;#34;&#xA;        Tier        = &amp;#34;application&amp;#34;&#xA;        Compliance  = &amp;#34;cis-benchmark&amp;#34;&#xA;        Security    = &amp;#34;low&amp;#34;&#xA;    }&#xA;    # ebs_block_device {&#xA;    #     device_name = &amp;#34;/dev/sdf&amp;#34;&#xA;    #     volume_type = &amp;#34;gp2&amp;#34;&#xA;    #     volume_size = &amp;#34;200&amp;#34;&#xA;    # }&#xA;    # ebs_block_device {&#xA;    #     device_name = &amp;#34;/dev/sdg&amp;#34;&#xA;    #     volume_type = &amp;#34;gp2&amp;#34;&#xA;    #     volume_size = &amp;#34;200&amp;#34;&#xA;    # }&#xA;}&#xA;&#xA;resource &amp;#34;aws_ebs_volume&amp;#34; &amp;#34;toolstack_01_dev_sdf&amp;#34; {&#xA;  availability_zone = &amp;#34;${aws_instance.toolstack-east-svcs-1.availability_zone}&amp;#34;&#xA;  size = 200&#xA;  type = &amp;#34;gp2&amp;#34;&#xA;  tags {&#xA;    AttachedTo = &amp;#34;${aws_instance.toolstack-east-svcs-1.id}&amp;#34;&#xA;    Device = &amp;#34;/dev/sdf&amp;#34;&#xA;    MakeSnapshot = &amp;#34;true&amp;#34;&#xA;    Name = &amp;#34;toolstack-01.svcs.east.gsa.local_/dev/sdf&amp;#34;&#xA;  }&#xA;}&#xA;&#xA;resource &amp;#34;aws_ebs_volume&amp;#34; &amp;#34;toolstack_01_dev_sdg&amp;#34; {&#xA;  availability_zone = &amp;#34;${aws_instance.toolstack-east-svcs-1.availability_zone}&amp;#34;&#xA;  size = 200&#xA;  type = &amp;#34;gp2&amp;#34;&#xA;  tags {&#xA;    AttachedTo = &amp;#34;${aws_instance.toolstack-east-svcs-1.id}&amp;#34;&#xA;    Device = &amp;#34;/dev/sdg&amp;#34;&#xA;    MakeSnapshot = &amp;#34;true&amp;#34;&#xA;    Name = &amp;#34;toolstack-01.svcs.east.gsa.local_/dev/sdg&amp;#34;&#xA;  }&#xA;}&#xA;&#xA;resource &amp;#34;aws_volume_attachment&amp;#34; &amp;#34;toolstack_01_dev_sdf&amp;#34; {&#xA;  device_name = &amp;#34;/dev/sdf&amp;#34;&#xA;  volume_id = &amp;#34;${aws_ebs_volume.toolstack_01_dev_sdf.id}&amp;#34;&#xA;  instance_id = &amp;#34;${aws_instance.toolstack-east-svcs-1.id}&amp;#34;&#xA;}&#xA;&#xA;resource &amp;#34;aws_volume_attachment&amp;#34; &amp;#34;toolstack_01_dev_sdg&amp;#34; {&#xA;  device_name = &amp;#34;/dev/sdg&amp;#34;&#xA;  volume_id = &amp;#34;${aws_ebs_volume.toolstack_01_dev_sdg.id}&amp;#34;&#xA;  instance_id = &amp;#34;${aws_instance.toolstack-east-svcs-1.id}&amp;#34;&#xA;}&#xA;&#xA;Note:  Using the console or aws cli, search for all volumes attached the aws_instance and get the volume IDs for each.  &#xA;&#xA;example:&#xA;&#xA;toolstack-01.svcs.east.gsa.local_/dev/sdf vol-1af72be1&#xA;toolstack-01.svcs.east.gsa.local_/dev/sdg vol-367f7d93&#xA;&#xA;Important:  Be sure you are importing into the correct state file (customer) and that the names match the aws_ebs_volume resource names from above.&#xA;&#xA;&amp;gt; terraform import aws_ebs_volume.toolstack_01_dev_sdf vol-1af72be1&#xA;aws_ebs_volume.toolstack_01_dev_sdf: Importing from ID &amp;#34;vol-1af72be1&amp;#34;...&#xA;aws_ebs_volume.toolstack_01_dev_sdf: Import complete!&#xA;  Imported aws_ebs_volume (ID: vol-1af72be1)&#xA;&#xA;&amp;gt; terraform import aws_ebs_volume.toolstack_01_dev_sdg vol-367f7d93&#xA;aws_ebs_volume.toolstack_01_dev_sdg: Importing from ID &amp;#34;vol-367f7d93&amp;#34;...&#xA;aws_ebs_volume.toolstack_01_dev_sdg: Import complete!&#xA;  Imported aws_ebs_volume (ID: vol-367f7d93)&#xA;aws_ebs_volume.toolstack_01_dev_sdg: Refreshing state... (ID: vol-367f7d93)&#xA;&#xA;&#xA;&#xA;Add the volume_attachment data to terraform.tfstate (one for each aws_volume_attachment):&#xA;&#xA;  * Update the resource name (toolstack_01_dev_sdf,toolstack_01_dev_sdg) to match the aws_volume_attachment resource name(s)&#xA;  * Update the id (vai-1420276914,vai-1420276915), increment from last used ID. (must be unique)&#xA;  * Update attributes.device_name, attributes.instance_id, attributes.volume_id to match the existing resource&amp;#39;s values.&#xA;  * Add to terraform.tfstate file&#xA;&#xA;&#xA;  &amp;#34;aws_volume_attachment.toolstack_01_dev_sdf&amp;#34;: {&#xA;        &amp;#34;type&amp;#34;: &amp;#34;aws_volume_attachment&amp;#34;,&#xA;        &amp;#34;depends_on&amp;#34;: [],&#xA;        &amp;#34;primary&amp;#34;: {&#xA;            &amp;#34;id&amp;#34;: &amp;#34;vai-1420276914&amp;#34;,&#xA;            &amp;#34;attributes&amp;#34;: {&#xA;                &amp;#34;device_name&amp;#34;: &amp;#34;/dev/sdf&amp;#34;,&#xA;                &amp;#34;id&amp;#34;: &amp;#34;vai-1420276914&amp;#34;,&#xA;                &amp;#34;instance_id&amp;#34;: &amp;#34;i-273f9fd9&amp;#34;,&#xA;                &amp;#34;volume_id&amp;#34;: &amp;#34;vol-1af72be1&amp;#34;&#xA;            },&#xA;            &amp;#34;meta&amp;#34;: {},&#xA;            &amp;#34;tainted&amp;#34;: false&#xA;        },&#xA;        &amp;#34;deposed&amp;#34;: [],&#xA;        &amp;#34;provider&amp;#34;: &amp;#34;&amp;#34;&#xA;    },&#xA;    &amp;#34;aws_volume_attachment.toolstack_01_dev_sdg&amp;#34;: {&#xA;        &amp;#34;type&amp;#34;: &amp;#34;aws_volume_attachment&amp;#34;,&#xA;        &amp;#34;depends_on&amp;#34;: [],&#xA;        &amp;#34;primary&amp;#34;: {&#xA;            &amp;#34;id&amp;#34;: &amp;#34;vai-1420276915&amp;#34;,&#xA;            &amp;#34;attributes&amp;#34;: {&#xA;                &amp;#34;device_name&amp;#34;: &amp;#34;/dev/sdg&amp;#34;,&#xA;                &amp;#34;id&amp;#34;: &amp;#34;vai-1420276915&amp;#34;,&#xA;                &amp;#34;instance_id&amp;#34;: &amp;#34;i-273f9fd9&amp;#34;,&#xA;                &amp;#34;volume_id&amp;#34;: &amp;#34;vol-367f7d93&amp;#34;&#xA;            },&#xA;            &amp;#34;meta&amp;#34;: {},&#xA;            &amp;#34;tainted&amp;#34;: false&#xA;        },&#xA;        &amp;#34;deposed&amp;#34;: [],&#xA;        &amp;#34;provider&amp;#34;: &amp;#34;&amp;#34;&#xA;    },&#xA;&#xA;&#xA;Locate the aws_instance resource in the terraform state file, and remove all ebs_block_device attributes.&#xA;&#xA;   &amp;#34;ebs_block_device.#&amp;#34;: &amp;#34;2&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2659407853.delete_on_termination&amp;#34;: &amp;#34;true&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2659407853.device_name&amp;#34;: &amp;#34;/dev/sdf&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2659407853.encrypted&amp;#34;: &amp;#34;false&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2659407853.iops&amp;#34;: &amp;#34;600&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2659407853.snapshot_id&amp;#34;: &amp;#34;&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2659407853.volume_size&amp;#34;: &amp;#34;200&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2659407853.volume_type&amp;#34;: &amp;#34;gp2&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2671853018.delete_on_termination&amp;#34;: &amp;#34;false&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2671853018.device_name&amp;#34;: &amp;#34;/dev/sdg&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2671853018.encrypted&amp;#34;: &amp;#34;false&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2671853018.iops&amp;#34;: &amp;#34;600&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2671853018.snapshot_id&amp;#34;: &amp;#34;&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2671853018.volume_size&amp;#34;: &amp;#34;200&amp;#34;,&#xA;    &amp;#34;ebs_block_device.2671853018.volume_type&amp;#34;: &amp;#34;gp2&amp;#34;,&#xA;&#xA;Lastly... increment the serial number at the top of the terraform state file and save.&#xA;&#xA;Step 4: Run a terraform plan.  There should be no changes required.  If there is, something is incorrect.&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be &#xA;disclosed in any manner to a third party without the prior written consent of &#xA;CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>terraform pulling state file</title>
      <link>//localhost:1313/en/kb/tools_processes/terraform/terraform-pulling-state-file/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/terraform/terraform-pulling-state-file/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysic Corporation)  &#xA;=================================================&#xA;&#xA;Subject: How to pull the terraform state file&#xA;&#xA;Revision History:&#xA;    2015-10-26 10:56:00 - Version 1 created by Bao&#xA;&#xA;Details: &#xA;terraform state pull &amp;gt; ~/tfhhs.out&#xA;&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be &#xA;disclosed in any manner to a third party without the prior written consent of &#xA;CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
