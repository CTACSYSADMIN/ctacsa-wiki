<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Documentation for Hugo Learn Theme</title>
    <link>//localhost:1313/en/kb/tools_processes/linux/</link>
    <description>Recent content in Linux on Documentation for Hugo Learn Theme</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Feb 2022 10:31:29 -0500</lastBuildDate>
    <atom:link href="//localhost:1313/en/kb/tools_processes/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>linux handle locked user accounts</title>
      <link>//localhost:1313/en/kb/tools_processes/linux/linux-handle-locked-user-accounts/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/linux/linux-handle-locked-user-accounts/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysis Corporation)  &#xA;=================================================&#xA;&#xA;Subject: Linux/Ubuntu Locked Users&#xA;&#xA;Revision History:&#xA;    2015-08-24 06:16:33 - Version 1 created by Paul Rigor&#xA;&#xA;Details: (include steps to reproduce, symptoms, corrective actions, contact information, links and a any other helpful information)&#xA;&#xA; And alert similar to:&#xA;&#xA;XXX.XXX.XXX.XXX - CRITICAL&#xA;XXX-SLACK-CRIT host.domain.local/locked_users: Locked Users: &#xA;Login           Failures Latest failure     From&#xA;prigor              3    08/24/15 00:20:31  10.141.2.40&#xA;: XXX.XXX.XXX.XXX : disk_standard,standard,puppet&#xA;&#xA;means that one or more accounts have had login failures exceeding the threshold limit.&#xA;&#xA;To unlock the user: a separate administrator must successfully login to the affected system, sudo as root and execute:&#xA;&#xA;a) To get a list of all locked users:&#xA;  &amp;gt; pam_tally2&#xA;b) To unlock a specific user&#xA;  &amp;gt; pam_tally2 -u &amp;lt;username&amp;gt; -r&#xA;c) To unlock all users&#xA;  &amp;gt; pam_tally2 -r&#xA;&#xA;In the event multiple systems.  Puppet and MCO can be used.  (See Puppet-manually-push-to-node-using-mcollective.ctac.kb.txt)yies&#xA;&#xA;exec { &amp;#39;reset_locked_users&amp;#39;:&#xA;  command =&amp;gt; &amp;#39;pam_tally2 -r&amp;#39;&#xA;}&#xA;&#xA;The monitoring of user lockouts is handled by:&#xA;&#xA;a) Puppet deploys a root cron job that outputs to /var/log/locked_users&#xA;b) Sensu monitors that file for content as part of the standard subscription.&#xA;c) Sensu notifies as part of the standard handlers.&#xA;&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be &#xA;disclosed in any manner to a third party without the prior written consent of &#xA;CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>linux oneliners</title>
      <link>//localhost:1313/en/kb/tools_processes/linux/linux-oneliners/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/linux/linux-oneliners/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysis Corporation)  &#xA;=================================================&#xA;&#xA;Subject: Linux oneliners&#xA;&#xA;Revision History:&#xA;    2015-08-24 10:12:00 - Version 1 created by Bao&#xA;&#xA;Details: (include steps to reproduce, symptoms, corrective actions, contact information, links and a any other helpful information)&#xA;&#xA;&#xA;- 10 largest files sorted by size&#xA;du | sort -n -r | head -10&#xA;&#xA;- Tar and pipe the ssl directory to S3:&#xA;tar -cf - ssl | gzip -9 | s3cmd put - s3://ctac-migrate/ssl.tar.gz&#xA;&#xA;- Get the file from s3 and tar without downloading it locally:&#xA;s3cmd get s3://ctac-migrate/ssl.tar.gz - | tar xvz&#xA;&#xA;Something is wrong with the s3cmd, but aws s3 works:&#xA;aws s3 cp s3://example-bucket/file.tar.gz - | tar -xz&#xA;&#xA;&#xA;&#xA;- Back up all user-created databases by piping to S3 (i.e. don’t consume space on local disk)&#xA;for x in `mysql -udbadmin -p -BN -e &amp;#34;show databases&amp;#34; | grep -v -e &amp;#39;mysql&amp;#39; -e &amp;#39;lost&amp;#39; -e &amp;#39;performance&amp;#39;`; do mysqldump -udbadmin -p --databases $x | gzip | s3cmd put - s3://ctac-migrate/synd-db-01/$x.sql.gz; done&#xA;&#xA;- MySQL dump a single database and send it directly to S3:&#xA;mysqldump -u hhsweb —p --databases aids | s3cmd put - S3://ctac-migrate/perc-migration-db-01-aids-dump.sql&#xA;&#xA;- Zip files and encrypt (recursive)&#xA;zip --encrypt -r file.zip files&#xA;&#xA;- MySQL export into csv file, include column headers, and gracefully handle NULL values&#xA;mysql -uroot -p -e &amp;#34;select &amp;#39;id&amp;#39;, &amp;#39;f_name&amp;#39;, &amp;#39;l_name&amp;#39;, &amp;#39;locked&amp;#39;, &amp;#39;email&amp;#39;, &amp;#39;created_at&amp;#39;, &amp;#39;role_id&amp;#39;, &amp;#39;hhs_id&amp;#39;, &amp;#39;last_request_at&amp;#39; UNION ALL select id, f_name, l_name, locked, email, created_at, role_id, hhs_id, last_request_at from comment_tool_app_production.users INTO OUTFILE &amp;#39;/tmp/voc_stage_query.csv&amp;#39; FIELDS TERMINATED BY &amp;#39;,&amp;#39; ESCAPED BY &amp;#39;&amp;#39; ENCLOSED BY &amp;#39;\&amp;#34;&amp;#39; LINES TERMINATED BY &amp;#39;\\n&amp;#39;&amp;#34;&#xA;&#xA;- MySQL export from RDS into CSV file:&#xA;mysql -urubyapp -p -h&amp;#39;hhs-rds-voc-prod-1.ctkqhucn2qcz.us-east-1.rds.amazonaws.com&amp;#39; --batch -e &amp;#34;select id, f_name, l_name, locked, email, created_at, role_id, hhs_id, last_request_at from voc_production.users&amp;#34; | sed &amp;#39;s/\t/&amp;#34;,&amp;#34;/g;s/^/&amp;#34;/;s/$/&amp;#34;/;s/\n//g&amp;#39; &amp;gt; /tmp/voc_prod_query.csv&#xA;&#xA;- grep Apache Virtual Host for ServerName, find unique DNSes, sort them and do an nslookup on the DNS&#xA;for x in `grep ServerName /etc/apache2/sites-enabled/*.conf | grep wcms | awk &amp;#39;{print $3}&amp;#39; |  sort | uniq`; do nslookup $x; done&#xA;&#xA;&#xA;- wget splunk enterprise&#xA;wget -O splunk-6.4.1-debde650d26e-Linux-x86_64.tgz &amp;#39;https://www.splunk.com/bin/splunk/DownloadActivityServlet?architecture=x86_64&amp;amp;platform=linux&amp;amp;version=6.4.1&amp;amp;product=splunk&amp;amp;filename=splunk-6.4.1-debde650d26e-Linux-x86_64.tgz&amp;amp;wget=true&amp;#39;&#xA;&#xA;- wget splunk forwarder&#xA;wget -O splunkforwarder-6.4.1-debde650d26e-Linux-x86_64.tgz &amp;#39;https://www.splunk.com/bin/splunk/DownloadActivityServlet?architecture=x86_64&amp;amp;platform=linux&amp;amp;version=6.4.1&amp;amp;product=universalforwarder&amp;amp;filename=splunkforwarder-6.4.1-debde650d26e-Linux-x86_64.tgz&amp;amp;wget=true&amp;#39;&#xA;&#xA;- S3 sync the testdir/ to a s3://bucket/tesdir/&#xA;s3cmd sync testdir/ s3://bucket/testdir/ --no-encrypt&#xA;d&#xA;- Remove quotes&#xA;| tr -d &amp;#39;&amp;#34;&amp;#39;&#xA;&#xA;- S3 set all files in an S3 bucket to be public&#xA;s3cmd setacl &amp;lt;Name-Of-Bucket&amp;gt; —acl-public --recursive&#xA;&#xA;- mac erase a volume:&#xA;diskutil eraseDisk HFS+ NONAME disk2&#xA;&#xA;&#xA;- Splunk query for daily index size usage for the last week&#xA;index=_internal source=*license_usage.log type=&amp;#34;Usage&amp;#34; splunk_server=* earliest=-1w@d | eval Date=strftime(_time, &amp;#34;%Y/%m/%d&amp;#34;) | eventstats sum(b) as volume by idx, Date | eval MB=round(volume/1024/1024,5)| timechart first(MB) AS volume by idx &#xA;&#xA;&#xA;- Curl commands:&#xA;for x in $(seq 1 100); do curl -H &amp;#39;Cache-Control: no-cache&amp;#39; -o /dev/null -s -w &amp;#39;Total: %{time_total}\n&amp;#39;  https://stage-search.cloud.hhs.gov/searchblox/hhs/index.html; done&#xA;&#xA;- openssl&#xA;for x in $(cat cloudhhsurls); do echo $x; echo | openssl s_client -servername www.shellhacks.com -connect &amp;#34;$x&amp;#34;:443 2&amp;gt;/dev/null | openssl x509 -noout -dates; done&#xA;&#xA;&#xA;- curl pass host header&#xA;curl https://alb-hrsa-drupal-stage-235390363.us-east-1.elb.amazonaws.com/ -vk -o /dev/null -H &amp;#34;Host: akastage-www.organdonor.gov&amp;#34; --tlsv1.2 -4&#xA;&#xA;- iptables&#xA;#Drop all outbound packets&#xA;iptables -t filter -I OUTPUT 1 -m state --state NEW -j DROP&#xA;&#xA;#allow all outbound packets&#xA;iptables -t filter -I OUTPUT 1 -m state --state NEW -j ACCEPT&#xA;&#xA;&#xA;- MySQL database sizes&#xA;SELECT table_schema AS &amp;#34;Database&amp;#34;,&#xA;ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS &amp;#34;Size (MB)&amp;#34;&#xA;FROM information_schema.TABLES&#xA;GROUP BY table_schema;&#xA;&#x9;&#xA;- SSH tunnel&#xA;ssh tunnel:&#xA;step 1: &#xA;ssh -p 22 -N -L 3307:hhs-rds-shared-java-ruby-stg-1.ctkqhucn2qcz.us-east-1.rds.amazonaws.com:3306 hhs-confluence-01.stg.hhs.local&#xA;step 2:&#xA;mysql -h127.0.0.1 -usharedjavaruby -P 3307 -p&#xA;&#xA;- untangled vpn user query&#xA;[root @ untangle] /var/log # zgrep &amp;#34;Peer Connection Initiated with&amp;#34; openvpn.log.*.gz | awk &amp;#39;{print $7}&amp;#39; | sort | uniq -c&#xA;&#xA;&#xA;&#xA;- LDAP&#xA;&#xA;Simple ldapsearch to list everything in dc=hhs,dc=local, which is pretty much everyone in LDAP:&#xA;ldapsearch -x -b &amp;#34;dc=hhs,dc=local&amp;#34; -H ldap://dns-02.svcs.hhs.local&#xA;&#xA;&#xA;query to list users in groups&#xA;ldapsearch -x -b &amp;#34;ou=groups,dc=hhs,dc=local&amp;#34; -H ldap://dns-02.svcs.hhs.local&#xA;&#xA;&#xA;ldapsearch -x -b &amp;#34;cn=git-bitbucket,ou=groups,dc=hhs,dc=local&amp;#34; -H ldap://dns-02.svcs.hhs.local&#xA;&#xA;&#xA;&#xA;for x in $(ldapsearch -x -b &amp;#34;cn=git-bitbucket,ou=groups,dc=hhs,dc=local&amp;#34; -H ldap://dns-02.svcs.hhs.local | grep member | awk &amp;#39;{print $2}&amp;#39; | cut -c 5- | sed &amp;#39;s/,.*//&amp;#39;)&#xA;do&#xA;  echo $x&#xA;  ldapsearch -x -b &amp;#34;dc=hhs,dc=local&amp;#34; -H ldap://dns-02.svcs.hhs.local &amp;#34;(uid=$x)&amp;#34; | grep employeeNumber | awk &amp;#39;{print $2}&amp;#39;&#xA;done&#xA;&#xA;&#xA;ldapsearch -x -b &amp;#34;cn=git-bitbucket,ou=groups,dc=hhs,dc=local&amp;#34; -H ldap://dns-02.svcs.hhs.local &amp;#34;(member=uid=zjones,ou=people,dc=hhs,dc=local)&amp;#34; &#xA;&#xA;&#xA;ldapsearch -x -b &amp;#34;dc=hhs,dc=local&amp;#34; -H ldap://dns-02.svcs.hhs.local &amp;#34;(mail=bnguyen@ctacorp.com)&amp;#34; &#xA;&#xA;ldapsearch -x -b &amp;#34;dc=hhs,dc=local&amp;#34; -H ldap://dns-02.svcs.hhs.local &amp;#34;(uid=bnguyen)&amp;#34; employeeNumber&#xA;&#xA;- Misc&#xA;# for adding new packages in repo.ctacdev.com&#xA;dpkg-scanpackages . /dev/null | gzip -9c &amp;gt; Packages.gz&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be disclosed in any manner to a third party without the prior written consent of CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>pam tally2 no such file</title>
      <link>//localhost:1313/en/kb/tools_processes/linux/pam-tally2-no-such-file/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/linux/pam-tally2-no-such-file/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysic Corporation)  &#xA;=================================================&#xA;&#xA;Subject: /sbin/pam_tally2: No such file or directory&#xA;&#xA;Revision History:&#xA;    2016-01-21 08:00:00 - Version 1 created by Paul Rigor&#xA;&#xA;Details: &#xA;&#xA;   If a new server exhibits the inability to tally locked users:&#xA;   &amp;gt; pam_tally2&#xA;   /sbin/pam_tally2: No such file or directory&#xA;&#xA;   The simple solution is to log in with a valid PAM user.  This will initialize everything that pam_tally2 needs.&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be &#xA;disclosed in any manner to a third party without the prior written consent of &#xA;CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>rsyslog not writing to var log syslog</title>
      <link>//localhost:1313/en/kb/tools_processes/linux/rsyslog-not-writing-to-var-log-syslog/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/linux/rsyslog-not-writing-to-var-log-syslog/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysis Corporation)  &#xA;=================================================&#xA;&#xA;Subject: Ubuntu Syslog Not Logging (/var/log/syslog)&#xA;&#xA;Revision History:&#xA;    2015-01-09 12:53:58 - Version 1 created by Paul Rigor&#xA;&#xA;Details: (include steps to reproduce, symptoms, corrective actions, contact information, links and a any other helpful information)&#xA;&#xA; keywords: rsyslogd, syslog&#xA;&#xA; If rsyslog is not writing to /var/log/syslog and rsyslog appears to be configured correctly then check the permissions on /var/log/syslog*&#xA;&#xA; The permssions should be syslog:adm not root:root or root:adm.&#xA;&#xA; chown syslog:adm /var/log/syslog*&#xA;&#xA; &#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be &#xA;disclosed in any manner to a third party without the prior written consent of &#xA;CTAC.```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>ubuntu patch party process</title>
      <link>//localhost:1313/en/kb/tools_processes/linux/ubuntu-patch-party-process/</link>
      <pubDate>Sat, 05 Feb 2022 10:31:29 -0500</pubDate>
      <guid>//localhost:1313/en/kb/tools_processes/linux/ubuntu-patch-party-process/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Knowledge Base Article - CTAC (Communications Training Analysis Corporation)  &#xA;=================================================&#xA;&#xA;Subject: Ubuntu - Patch Party Process (Updates Kernel and all packages)&#xA;&#xA;Revision History:&#xA;    2016-05-18 10:12:00 - Version 1 created by Paul Rigor (PER)&#xA;    2017-06-22 06:36:00 - Version 2 added clamav cleanup PER&#xA;    2017-07-11 08:00:00 - Version 3 added --with-new-pkgs and apt-get autoremove -y&#xA;    2018-08-02 07:30:00 - Version 4 added reset info for package count if reboot not required&#xA;    2018-08-19 10:45:00 - Version 5 added example of rollback process&#xA;    2019-03-12 20:12:00 - Version 6 added steps for upgrading apache/java. Should not be necessary for immutable instances (Bao)&#xA;    2019-07-24 08:00:00 - Version 7 refactored for application specific items.&#xA;    2019-11-13 11:35:00 - Version 8 removed -o Dpkg::Options::=&amp;#34;--force-confdef&amp;#34; from apt upgrade&#xA;    2019-11-25 11:35:00 - Version 9 Added a step 0 to get running processes and mounts&#xA;    2020-05-14 10:54:50 - Version 10 Added misc steps for Windows &amp;amp; Sophos (bao)&#xA;    2020-05-14 11:00:00 - Version 11 Added if/else logic to check whether reboot is required or not in step1 (Ali)&#xA;&#xA;Details: (include steps to reproduce, symptoms, corrective actions, contact information, links and a any other helpful information)&#xA;&#xA;&#xA;IMPORTANT:  If the instance your are patching has applications or services that are not upstart or sysv then you will need to restart those after the patch process is complete.&#xA;&#xA;IMPORTANT: Pay attention to what’s going on.. APT has a tendency to fail and get dpkg confused.    if the dpkg clean up of kernels goes to a menu and freezed.. just ctrl-c, kill dpkg and try again.. it may require a dpkg reset and or commenting out the black list and running unnattended-upgrade -d again.&#xA;&#xA;Step 0:&#xA;ps -ef &amp;gt; ~/process-list.out; df -h &amp;gt; ~/df.out; echo &amp;#34;********************&amp;#34;; w; echo &amp;#34;********************&amp;#34;; uname -a; echo &amp;#34;********************&amp;#34;; cat /etc/lsb-release&#xA;&#xA;&#xA;Step 1:&#xA;&#xA;if clamav installed:&#xA;  &#xA;rm -rf /var/lib/clamav/*.tmp&#xA;&#xA;&#xA;sudo sed -i &amp;#39;/^Unattended-Upgrade\:\:Package-Blacklist/,+3 s/^/\/\//&amp;#39; /etc/apt/apt.conf.d/50unattended-upgrades &amp;amp;&amp;amp; sudo apt-get update &amp;amp;&amp;amp; DEBIAN_FRONTEND=noninteractive apt-get upgrade --with-new-pkgs -y  -o Dpkg::Options::=&amp;#34;--force-confold&amp;#34; &amp;amp;&amp;amp; sudo unattended-upgrade -d  &amp;amp;&amp;amp; apt-get autoremove -y&#xA;&#xA;ls -l /var/run/reboot*&#xA;If /var/run/reboot* not present.  Reboot is not required.  Run /usr/lib/update-notifier/update-motd-updates-available --force to update package count&#xA;&#xA;&#xA;if [ -f /var/run/reboot-required ]; then sync &amp;amp;&amp;amp; reboot; else echo &amp;#34;Reboot not required at step 1&amp;#34;; fi&#xA;&#xA;Step 2:&#xA;&#xA;sudo dpkg -l linux-{image,headers}-* | awk &amp;#39;/^ii/{print $2}&amp;#39; | egrep &amp;#39;[0-9]+\.[0-9]+\.[0-9]+&amp;#39; | awk &amp;#39;BEGIN{FS=&amp;#34;-&amp;#34;}; {if ($3 ~ /[0-9]+/) print $3&amp;#34;-&amp;#34;$4,$0; else if ($4 ~ /[0-9]+/) print $4&amp;#34;-&amp;#34;$5,$0}&amp;#39; | sort -k1,1 --version-sort -r | sed -e &amp;#34;1,/$(uname -r | cut -f1,2 -d&amp;#34;-&amp;#34;)/d&amp;#34; | grep -v -e `uname -r | cut -f1,2 -d&amp;#34;-&amp;#34;` | awk &amp;#39;{print $2}&amp;#39; | xargs sudo DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::=&amp;#34;--force-confdef&amp;#34; -o Dpkg::Options::=&amp;#34;--force-confold&amp;#34; purge&#xA;&#xA;update-grub &amp;amp;&amp;amp; sync;reboot&#xA;&#xA;Step 3:&#xA;&#xA;Verify kernel and all required services are running/working.  Applications work as expected.&#xA;&#xA;&#xA;Step 4 (only if applicable):&#xA;upgrade apache:&#xA;apt-get upgrade apache2&#xA;&#xA;&#xA;Step 5 (only if applicable):&#xA;Upgrade java:&#xA;add-apt-repository ppa:webupd8team/java&#xA;apt-get update&#xA;apt-get upgrade oracle-java8-installer&#xA;&#xA;&#xA;Step 6:  (only if applicable):&#xA;apt-get upgrade base-files -y&#xA;&#xA;&#xA;&#xA;===========================&#xA;Kernel rollback process (Example: obviously you&amp;#39;ll want to substitute the kernel version for your current version)&#xA;===========================&#xA;&#xA;&#xA;apt-get update &amp;amp;&amp;amp; sudo apt-get install linux-image-3.13.0.153-generic linux-headers-3.13.0.153-generic linux-headers-3.13.0-153&#xA;sudo apt-get remove linux-image-3.13.0.155-generic linux-headers-3.13.0.155-generic linux-headers-3.13.0-155&#xA;update-grub&#xA;sync;reboot&#xA;&#xA;&#xA;===========================&#xA;Application &amp;amp; Application Family Specific Items&#xA;===========================&#xA;&#xA;&#xA;===========================&#xA;Legacy&#xA;===========================&#xA;Windows servers - just run the Windows Update and reboot if necessary&#xA;Sophos - log into the Web Admin and go to Up2Date. Apply updates if necessary&#xA;&#xA;&#xA;———————————————————————————————————————————————————&#xA;&#xA;IF you are patching the Consul cluster….&#xA;&#xA;Upgrade ONE server at a time ! Minimum of two consul servers must always be up.&#xA;&#xA;After you do the second reboot, you must unseal the vault on that server.&#xA;&#x9;&#x9;refer to the vault-unseal-if-sealed KB&#xA;&#xA;———————————————————————————————————————————————————&#xA;&#xA;IF you are only patching the ECS instances…&#xA;&#xA;- After patching,  run the ctac-rm-non-running-registered-containers script&#xA;       This script can be found in the sysadmin_tools repo in the consul folder&#xA;** Make sure it runs without errors&#xA;&#xA;If you need to upgrade the Docker Engine, do the following (Not for clusters):&#xA;&#xA;Step 1:&#xA;- apt-get remove -y docker-engine&#xA;&#xA;Step two:&#xA;- apt-get remove -y docker-engine &amp;amp;&amp;amp; DEBIAN_FRONTEND=noninteractive apt-get install -y -o Dpkg::Options::=&amp;#34;--force-confdef&amp;#34; -o Dpkg::Options::=&amp;#34;--force-confold&amp;#34; docker-engine&#xA;&#xA;Step three:&#xA;- puppet agent -t&#xA;&#xA;—————————————&#xA;&#xA;If you need to upgrade the ECS agent:&#xA;&#xA;Step 1:&#xA;- docker pull amazon/amazon-ecs-agent &amp;amp;&amp;amp; docker stop ecs-agent &amp;amp;&amp;amp; docker rm ecs-agent &amp;amp;&amp;amp; /usr/local/bin/ctac-docker-init.sh&#xA;&#xA;FINAL Step:&#xA;Run the ctac-rm-non-running-registered-containers script&#xA;       This script can be found in the sysadmin_tools repo in the consul folder&#xA;** Make sure it runs without errors&#xA;&#xA;———————————————————————————&#xA;&#xA;If you need to update a cluster instance.&#xA;&#xA;drain the instance via the AWS Console (CLI information TDB)&#xA;&#xA;&#xA;After all tasks are stopped on the instance:&#xA;&#xA;docker stop $(docker ps -q) &amp;amp;&amp;amp; docker rm $(docker ps -aq)&#xA;&#xA;docker rmi $(docker images -qa)&#xA;&#xA;sudo sed -i &amp;#39;/^Unattended-Upgrade\:\:Package-Blacklist/,+3 s/^/\/\//&amp;#39; /etc/apt/apt.conf.d/50unattended-upgrades &amp;amp;&amp;amp; sudo apt-get update &amp;amp;&amp;amp; DEBIAN_FRONTEND=noninteractive apt-get upgrade --with-new-pkgs -y -o Dpkg::Options::=&amp;#34;--force-confdef&amp;#34; -o Dpkg::Options::=&amp;#34;--force-confold&amp;#34; &amp;amp;&amp;amp; sudo unattended-upgrade -d  &amp;amp;&amp;amp; apt-get autoremove -y&#xA;&#xA;service docker stop&#xA;apt-get remove -y docker-ce&#xA;&#xA;DEBIAN_FRONTEND=noninteractive apt-get install -y -o Dpkg::Options::=&amp;#34;--force-confdef&amp;#34; -o Dpkg::Options::=&amp;#34;--force-confold&amp;#34; docker-ce&#xA;&#xA;puppet agent -t&#xA;&#xA;sync;reboot&#xA;&#xA;sudo dpkg -l linux-{image,headers}-* | awk &amp;#39;/^ii/{print $2}&amp;#39; | egrep &amp;#39;[0-9]+\.[0-9]+\.[0-9]+&amp;#39; | awk &amp;#39;BEGIN{FS=&amp;#34;-&amp;#34;}; {if ($3 ~ /[0-9]+/) print $3&amp;#34;-&amp;#34;$4,$0; else if ($4 ~ /[0-9]+/) print $4&amp;#34;-&amp;#34;$5,$0}&amp;#39; | sort -k1,1 --version-sort -r | sed -e &amp;#34;1,/$(uname -r | cut -f1,2 -d&amp;#34;-&amp;#34;)/d&amp;#34; | grep -v -e `uname -r | cut -f1,2 -d&amp;#34;-&amp;#34;` | awk &amp;#39;{print $2}&amp;#39; | xargs sudo DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::=&amp;#34;--force-confdef&amp;#34; -o Dpkg::Options::=&amp;#34;--force-confold&amp;#34; purge&#xA;&#xA;puppet agent -t&#xA;&#xA;update-grub &amp;amp;&amp;amp; sync;reboot&#xA;&#xA;/usr/local/bin/ctac-docker-init.sh&#xA;&#xA;Just in case....&#xA;&#xA;/usr/local/bin/ctac-rm-non-running-registered-containers.sh&#xA;&#xA;Check the service containers are running..&#xA;&#xA;Check Sensu for alerts&#xA;&#xA;&#xA;------------------------------------------------&#xA;HHS: If you run into an error stating something like:&#xA;E: Failed to fetch https://repo.svcs.hhs.local/dists/Packages  server certificate verification failed. CAfile:/etc/ssl/certs/ca-certificates.crt CRLfile: none E: Some index files failed to download. They have been ignored, or old ones used instead.&#xA;&#xA;&#xA;add the cert: /usr/local/share/ca-certificates/hhs_ca.crt&#xA;..and then: update-ca-certificates&#xA;&#xA;&#xA;&#xA;=================================================&#xA;This document is proprietary and confidential. No part of this document may be disclosed in any manner to a third party without the prior written consent of CTAC.&#xA;&amp;lt;!--stackedit_data:&#xA;eyJoaXN0b3J5IjpbLTE0NTc5NTcxNDNdfQ==&#xA;--&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
